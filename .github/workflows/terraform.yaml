---
name: "Terraform"
permissions:
  contents: read
  id-token: write
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:

concurrency: ci-${{ github.ref }}

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'
    environment: plan
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.x
          terraform_wrapper: false

      - name: Terraform fmt
        if: github.event_name == 'pull_request'
        id: fmt
        run: |
          terraform fmt -check -recursive -diff

      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color

  terraform-apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'

    environment: apply
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.cloudflare_api_token }}
      TF_VAR_cloudflare_account_id: ${{ secrets.cloudflare_account_id }}

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.x
          terraform_wrapper: false

      - name: Terraform fmt
        if: github.event_name == 'pull_request'
        id: fmt
        run: |
          terraform fmt -check -recursive -diff

      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color

      - name: Terraform Apply
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
        run: |
          terraform apply -parallelism=10 -auto-approve -no-color
